<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.myblog.dao.BlogCommentMapper">
  <resultMap id="BaseResultMap" type="com.blog.myblog.entity.BlogComment">
    <result column="comment_id" jdbcType="VARCHAR" property="commentId" />
    <result column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="author_id" jdbcType="VARCHAR" property="authorId" />
    <result column="parent_comment_id" jdbcType="VARCHAR" property="parentCommentId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.myblog.entity.BlogComment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Blob_Column_List">
    content
  </sql>
  <insert id="insert" parameterType="com.blog.myblog.entity.BlogComment">
    insert into blog_comment (comment_id, article_id, name, 
      email, type, author_id, 
      parent_comment_id, sort, create_time, 
      content)
    values (#{commentId,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{authorId,jdbcType=VARCHAR}, 
      #{parentCommentId,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.myblog.entity.BlogComment">
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="parentCommentId != null">
        parent_comment_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="parentCommentId != null">
        #{parentCommentId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>